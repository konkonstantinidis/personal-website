name: PR Preview

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, closed]

env:
  NODE_VERSION: '18'
  AWS_REGION: 'eu-west-1'

jobs:
  # Build and test for all PRs
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    outputs:
      artifact-id: ${{ steps.artifact.outputs.artifact-id }}
      pr-number: ${{ github.event.number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run format check
        run: npm run format:check

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: dist directory not found"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "Build failed: index.html not found in dist"
            exit 1
          fi
          echo "Build verification passed"

      - name: Upload build artifacts
        id: artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr-build-${{ github.event.number }}-${{ github.sha }}
          path: dist/
          retention-days: 7
          compression-level: 9

      - name: Comment on PR - Build Success
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.issue.number;

            // Find existing bot comments
            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber,
            });

            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🚀 Build Status')
            );

            const commentBody = `## 🚀 Build Status

            ✅ **Build successful!** Your changes have been built and are ready for review.

            **Commit:** \`${{ github.sha }}\`
            **Build Time:** ${new Date().toISOString()}

            ### 📊 Build Details
            - ✅ ESLint passed
            - ✅ TypeScript compilation passed
            - ✅ Format check passed
            - ✅ Production build created

            _This comment will be updated automatically as you push new commits._`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: commentBody
              });
            }

  # Optional: Deploy to staging environment for preview
  # Uncomment this job if you have a staging S3 bucket and CloudFront setup
  # deploy-preview:
  #   name: Deploy Preview
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   if: github.event.action != 'closed'
  #   environment:
  #     name: staging
  #     url: ${{ steps.deploy.outputs.preview-url }}
  #   permissions:
  #     id-token: write
  #     contents: read
  #     pull-requests: write
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         sparse-checkout: |
  #           terraform/
  #         sparse-checkout-cone-mode: false
  #
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: pr-build-${{ github.event.number }}-${{ github.sha }}
  #         path: dist/
  #
  #     - name: Configure AWS credentials using OIDC
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         role-to-assume: ${{ secrets.AWS_STAGING_ROLE_ARN }}
  #         aws-region: ${{ env.AWS_REGION }}
  #         role-session-name: GitHubActions-Preview-${{ github.run_id }}
  #
  #     - name: Deploy to staging S3
  #       id: deploy
  #       run: |
  #         # Deploy to staging bucket with PR prefix
  #         PREVIEW_PREFIX="pr-${{ github.event.number }}"
  #         STAGING_BUCKET="${{ secrets.STAGING_S3_BUCKET }}"
  #
  #         aws s3 sync dist/ s3://${STAGING_BUCKET}/${PREVIEW_PREFIX}/ \
  #           --cache-control "no-cache, no-store, must-revalidate" \
  #           --delete
  #
  #         PREVIEW_URL="https://${STAGING_BUCKET}.s3-website-${{ env.AWS_REGION }}.amazonaws.com/${PREVIEW_PREFIX}/"
  #         echo "preview-url=${PREVIEW_URL}" >> $GITHUB_OUTPUT
  #
  #     - name: Comment on PR with preview link
  #       uses: actions/github-script@v7
  #       with:
  #         script: |
  #           const { owner, repo } = context.repo;
  #           const prNumber = context.issue.number;
  #           const previewUrl = '${{ steps.deploy.outputs.preview-url }}';
  #
  #           const commentBody = `## 🔗 Preview Deployment
  #
  #           Your changes have been deployed to a preview environment!
  #
  #           **Preview URL:** [${previewUrl}](${previewUrl})
  #           **Commit:** \`${{ github.sha }}\`
  #
  #           The preview will be automatically updated when you push new commits.`;
  #
  #           await github.rest.issues.createComment({
  #             owner,
  #             repo,
  #             issue_number: prNumber,
  #             body: commentBody
  #           });

  # Clean up preview deployments when PR is closed
  cleanup-preview:
    name: Cleanup Preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Comment on PR - Cleanup
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.issue.number;

            const commentBody = `## 🧹 Preview Cleanup

            The preview deployment for this PR has been cleaned up.

            **PR Status:** ${context.payload.pull_request.merged ? 'Merged' : 'Closed'}
            **Final Commit:** \`${{ github.sha }}\`

            Thank you for your contribution! 🎉`;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: commentBody
            });

      # Uncomment if using preview deployments
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.AWS_STAGING_ROLE_ARN }}
      #     aws-region: ${{ env.AWS_REGION }}
      #     role-session-name: GitHubActions-Cleanup-${{ github.run_id }}
      #
      # - name: Remove preview deployment
      #   run: |
      #     PREVIEW_PREFIX="pr-${{ github.event.number }}"
      #     STAGING_BUCKET="${{ secrets.STAGING_S3_BUCKET }}"
      #
      #     aws s3 rm s3://${STAGING_BUCKET}/${PREVIEW_PREFIX}/ --recursive

  # Handle build failures
  handle-failure:
    name: Handle Build Failure
    runs-on: ubuntu-latest
    needs: build-and-test
    if: failure() && github.event.action != 'closed'
    steps:
      - name: Comment on PR - Build Failure
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.issue.number;

            const commentBody = `## ❌ Build Failed

            The build failed for this PR. Please check the workflow logs and fix the issues.

            **Commit:** \`${{ github.sha }}\`
            **Failure Time:** ${new Date().toISOString()}

            ### 🔍 Common Issues to Check
            - ESLint errors or warnings
            - TypeScript compilation errors
            - Code formatting issues
            - Missing dependencies

            [View Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            _This comment will be updated when you push fixes._`;

            // Find existing bot comments
            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber,
            });

            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🚀 Build Status')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: commentBody
              });
            }
